services:
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    ports:
      - 5673:5672
      - 15673:15672
    volumes:
      - ./.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ./.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - private

  db:
    container_name: db
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_HOST_AUTH_METHOD=${DOCKER_POSTGRES_HOST_AUTH_METHOD}
      - POSTGRES_USER=${DOCKER_POSTGRES_USER}
      - POSTGRES_PASSWORD==${DOCKER_POSTGRES_PASSWORD}
    ports:
      - 5432:5432
    volumes:
      - ./db:/var/lib/postgresql/data
    networks:
      - private

  #Main server
  server:
    build:
      context: backend
      target: setupdb
    command: npm run start:docker-prod
    env_file: ./backend/.env
    ports:
      - ${DOCKER_SERVER_EXPOSE_PORT}:3000
    volumes:
      - ./backend:/base
    networks:
      - public
      - private
    depends_on:
      - rabbitmq
      - db

  # Notification service
  notification-service:
    image: node:16.13.1
    command: npm run start:notify
    ports:
      - ${DOCKER_SERVER_NOTIFY_EXPOSE_PORT}:3555
    working_dir: /base
    volumes:
      - ./backend:/base
    networks:
      - public
      - private
    depends_on:
      - server

  # Video service
  video-service:
    image: node:16.13.1
    command: npm run start:video
    working_dir: /base
    volumes:
      - ./backend:/base
    networks:
      - private
    depends_on:
      - server

  #Front end
  frontend:
    build:
      context: frontend
      target: build
    env_file: ./frontend/.env
    ports:
      - ${DOCKER_APP_EXPOSE_PORT}:3000
    command: npx serve dist # Will auto binding 3000 port, so you should expose from 3000
    volumes:
      - ./frontend:/base
    networks:
      - public
    depends_on:
      - server

networks:
  public:
  private:
    driver: bridge
volumes:
  backend:
    external: true
  frontend:
    external: true